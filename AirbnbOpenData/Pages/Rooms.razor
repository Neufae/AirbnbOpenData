@page "/data"
@inject BackendService _backend

<PageTitle>Room Data</PageTitle>

<h1>Room Data</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (rooms == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Host</th>
                <th>Price</th>
                <th>Service Fee</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var room in rooms.Skip(skip).Take(take))
            {
                <tr>
                    <td>@room.name</td>
                    <td>@room.hostName</td>
                    <td>$@room.price</td>
                    <td>$@room.serviceFee</td>
                </tr>
            }
        </tbody>
    </table>
    <div>@(pageNum)/@(rooms.Count / take)</div>
    <div>
        <button class="btn btn-primary" @onclick="Prev" disabled="@prevDisabled">Prev</button>
        <button class="btn btn-primary" @onclick="Next">Next</button>
    </div>
}

@code {
    private List<RoomData>? rooms = null;
    int skip = 0;
    int take = 20;
    int pageNum = 1;
    bool prevDisabled = true;

    private void Prev()
    {
        skip -= take;
        pageNum--;
        if (skip == 0)
            prevDisabled = true;
    }

    private void Next()
    {
        skip += take;
        pageNum++;
        prevDisabled = false;
    }

    protected override async Task OnInitializedAsync()
    {
        rooms = await _backend.GetAllAsync();
    }
}
